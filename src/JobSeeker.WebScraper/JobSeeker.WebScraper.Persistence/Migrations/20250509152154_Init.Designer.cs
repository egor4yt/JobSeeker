// <auto-generated />
using JobSeeker.WebScraper.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JobSeeker.WebScraper.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250509152154_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JobSeeker.WebScraper.Domain.Entities.ScrapSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Domain" }, "UX_ScrapSource_Domain")
                        .IsUnique();

                    b.ToTable("ScrapSources");
                });

            modelBuilder.Entity("JobSeeker.WebScraper.Domain.Entities.ScrapTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ExcludeWordsList")
                        .HasColumnType("varchar(256)")
                        .HasComment("List of words separated with ','");

                    b.Property<string>("SearchText")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.ToTable("ScrapTasks");
                });

            modelBuilder.Entity("JobSeeker.WebScraper.Domain.Entities.ScrapTaskToSourceMap", b =>
                {
                    b.Property<int>("ScrapTaskId")
                        .HasColumnType("integer");

                    b.Property<int>("ScrapSourceId")
                        .HasColumnType("integer");

                    b.HasKey("ScrapTaskId", "ScrapSourceId");

                    b.HasIndex("ScrapSourceId");

                    b.ToTable("ScrapTaskToSourceMap");
                });

            modelBuilder.Entity("JobSeeker.WebScraper.Domain.Entities.ScrapTaskToSourceMap", b =>
                {
                    b.HasOne("JobSeeker.WebScraper.Domain.Entities.ScrapSource", "ScrapSource")
                        .WithMany()
                        .HasForeignKey("ScrapSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobSeeker.WebScraper.Domain.Entities.ScrapTask", "ScrapTask")
                        .WithMany()
                        .HasForeignKey("ScrapTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScrapSource");

                    b.Navigation("ScrapTask");
                });
#pragma warning restore 612, 618
        }
    }
}
